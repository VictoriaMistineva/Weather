{"version":3,"sources":["components/location/location.js","components/temp/temp.js","components/clothes/clothes.js","App.js","components/background/background.js","lib/GoogleLogin.js","serviceWorker.js","index.js"],"names":["LocationBox","props","weather","className","name","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","TemperatureAndWeather","Math","round","main","temp","description","ClothesRecomendate","t","listClothers","map","item","hot","warm","warm15","zero","warm1","cold","tempClothers","api","App","useState","query","setQuery","setWeather","gapi","setGapi","googleAuth","setGoogleAuth","isLoggedIn","setIsLoggedIn","setName","setEmail","setImageUrl","onSuccess","googleUser","profile","getBasicProfile","getName","getEmail","getImageUrl","onFailure","renderSigninButton","_gapi","signin2","render","useEffect","window","onGoogleScriptLoad","load","a","auth2","init","client_id","_googleAuth","id","firstJs","document","getElementsByTagName","getElementById","js","createElement","src","onload","parentNode","insertBefore","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","onClick","signOut","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.513cfa45.chunk.js","sourcesContent":["import React from 'react';\nimport './location.css';\n\nfunction LocationBox(props) {\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n\n  const {weather} = props;\n  return (\n\n    <div className=\"location-box\">\n      <div className=\"location\">{weather.name}</div>\n      <div className=\"date\">{dateBuilder(new Date())}</div>\n    </div>\n  );\n\n}\n\nexport default LocationBox;","import React from 'react';\nimport './temp.css';\n\nfunction TemperatureAndWeather(props) {\n  const {weather} = props;\n\n  return(\n    <div className=\"weather-box\">\n      <div className=\"temp\">\n        {Math.round(weather.main.temp)}°c\n      </div>\n      {/*текст погоды*/}\n      <div className=\"weather\">{weather.weather[0].description}</div>\n    </div>\n  );\n\n}\nexport default TemperatureAndWeather;","import React from \"react\";\nimport './clothes.css'\nimport listClothers from './data/listClothers.json';\n\nfunction ClothesRecomendate(props) {\n  const {weather} = props;\n\n\n  const tempClothers = (t) => {\n    if (typeof t != \"undefined\") {\n      //проверяем существует ли температура\n      if (t.temp && t.temp >= 25) {\n        return `${listClothers.map(item => item.hot)}`;\n      }\n      if (t.temp && t.temp >= 20) {\n        return `${listClothers.map(item => item.warm)}`;\n      }\n      if (t.temp && t.temp >= 15) {\n        return `${listClothers.map(item => item.warm15)}`;\n      }\n      if (t.temp && t.temp >= 0) {\n        return `${listClothers.map(item => item.zero)}`;\n      }\n      if (t.temp && t.temp <= -1) {\n        return `${listClothers.map(item => item.warm1)}`;\n      }\n      if (t.temp && t.temp <= -20) {\n        return `${listClothers.map(item => item.cold)}`;\n      }\n    }\n  }\n  return (\n    <div className=\"clothers-box\">\n      <div className=\"text\">\n        <p>{tempClothers(weather.main)}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default ClothesRecomendate;","import React, {useState, useEffect} from 'react';\nimport LocationBox from \"./components/location/location\";\nimport TemperatureAndWeather from \"./components/temp/temp\";\nimport {backgroundStyleByTemp} from \"./components/background/background\";\nimport Clothes from \"./components/clothes/clothes\";\nimport { loadGoogleScript } from './lib/GoogleLogin';\nconst googleClientId = \"919987767854-cinimefcgudrfoss2vik4mrcv3nni403.apps.googleusercontent.com\";\n\n\n\nconst api = {\n  key: \"25521e44d3e70320abb96685b57352e9\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [gapi, setGapi] = useState();\n  const [googleAuth, setGoogleAuth] = useState();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // eslint-disable-next-line\n  const [name, setName] = useState('');\n  // eslint-disable-next-line\n  const [email, setEmail] = useState('');\n  // eslint-disable-next-line\n  const [imageUrl, setImageUrl] = useState();\n\n  const onSuccess = (googleUser) => {\n    setIsLoggedIn(true);\n    const profile = googleUser.getBasicProfile();\n    setName(profile.getName());\n    setEmail(profile.getEmail());\n    setImageUrl(profile.getImageUrl());\n  };\n  \n  const onFailure = () => {\n    setIsLoggedIn(false);\n  }\n  \n  const logOut = () => {\n    (async() => {\n      await googleAuth.signOut();\n      setIsLoggedIn(false);\n      renderSigninButton(gapi);\n    })();\n  };\n  \n  const renderSigninButton = (_gapi) => {\n    _gapi.signin2.render('google-signin', {\n      'scope': 'profile email',\n      'width': 240,\n      'height': 50,\n      'longtitle': true,\n      'theme': 'dark',\n      'onsuccess': onSuccess,\n      'onfailure': onFailure \n    });\n  }\n  \n  \n  useEffect(() => {\n    \n    //window.gapi is available at this point\n    window.onGoogleScriptLoad = () => {\n     \n      const _gapi = window.gapi;\n      setGapi(_gapi);\n      \n      _gapi.load('auth2', () => {\n        (async () => { \n          const _googleAuth = await _gapi.auth2.init({\n           client_id: googleClientId\n          });\n          setGoogleAuth(_googleAuth);\n          renderSigninButton(_gapi);\n        })();\n      });\n    }\n    \n    //ensure everything is set before loading the script\n    loadGoogleScript();\n    // eslint-disable-next-line\n  }, []);\n\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        });\n    }\n  }\n\n  return (\n    <div>\n        {!isLoggedIn &&\n          <div className=\"login-screen-cover\">\n\n            <div className=\"login-screen-text-box\">\n              <h1 className=\"login-screen-heading-primary\">\n                <span className=\"login-screen-heading-primary-main\">Clothing recommendation</span>\n                <span className=\"login-screen-heading-primary-sub\">dependings on the weather</span>\n              </h1>\n              <div id=\"google-signin\" className=\"google-sign-button\"></div>\n            </div>\n          </div>\n        }\n        {isLoggedIn &&\n          <div\n          className={(backgroundStyleByTemp(weather.main))}>\n            <main>\n              <div>\n                <div className=\"search-box\">\n                  <input\n                    type=\"text\"\n                    className=\"search-bar\"\n                    placeholder=\"Сity search..\"\n                    onChange={e => setQuery(e.target.value)}\n                    value={query}\n                    onKeyPress={search}\n                  />\n                  <button id=\"login\" className=\"button blue\" onClick={logOut}>\n                    <i className=\"fa fa-unlock\"></i>\n                    <span>Log Out</span>\n                  </button>\n                </div>\n              </div>\n\n        {(typeof weather.main != \"undefined\") ? (\n          <div className=\"case\">\n        {/*локация кейс*/}\n          <LocationBox  weather = {weather}/>\n        {/*температура*/}\n          <TemperatureAndWeather weather = {weather}/>\n        {/*одежда*/}\n          <Clothes weather = {weather}/>\n          </div>\n          ) : ('')}\n          </main>\n          </div>\n        }\n    </div>\n  );\n}\n\nexport default App;\n","import './background.css'\n\nexport function backgroundStyleByTemp(t) {\n  if (typeof t != \"undefined\") {\n    //проверяем существует ли температура\n    if (t.temp && t.temp >= 30){\n      return \"app hot\"\n    }\n    if (t.temp && t.temp >= 20){\n      return \"app warm20\"\n    }\n    if (t.temp && t.temp >= 15){\n      return \"app warm15\"\n    }\n    if (t.temp && t.temp >= 0){\n      return \"app warm\"\n    }\n    if (t.temp && t.temp <= -1){\n      return \"app cold\"\n    }\n    if (t.temp && t.temp <= -20){\n      return \"app cold20\"\n    }\n  }\n  else {\n    return \"app\"\n  }\n}\n","  \nexport const loadGoogleScript = () => {\n  \n  //loads the Google JavaScript Library\n  (function () {\n      const id = 'google-js';\n      const src = 'https://apis.google.com/js/platform.js';\n      \n      //we have at least one script (React)\n      const firstJs = document.getElementsByTagName('script')[0];\n      \n      //prevent script from loading twice\n      if (document.getElementById(id)) { return; }\n      const js = document.createElement('script'); \n      js.id = id;\n      js.src = src;\n      js.onload = window.onGoogleScriptLoad; \n      firstJs.parentNode.insertBefore(js, firstJs);\n  }());    \n  \n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}